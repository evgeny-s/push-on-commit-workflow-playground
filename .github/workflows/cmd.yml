name: PR comment bot (/cmd)

on:
  issue_comment:
    types: [ created ]

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  is-org-member:
    if: startsWith(github.event.comment.body, '/cmd')
    runs-on: ubuntu-latest
    steps:
      - name: Check Permissions
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ORG: some-org
          REPO: some-repo
          COLLABORATOR: ${{ github.actor }}
        run: |
          permissions=$(curl -s -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/$ORG/$REPO/collaborators/$COLLABORATOR/permission")
          
          permission_level=$(echo "$permissions" | jq -r '.permission')
          
          if [[ "$COLLABORATOR" == "evgeny-s" ]]; then
            echo "‚úÖ User $COLLABORATOR has permission: "$permission_level". Proceeding..."
          else
            echo "‚ùå User $COLLABORATOR doesn't have enough permission: "$permission_level". Failing..." && exit 1
          fi
  acknowledge:
    if: startsWith(github.event.comment.body, '/cmd')
    needs: ["is-org-member"]
    runs-on: ubuntu-latest
    steps:
      - name: Add reaction to triggered comment
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.reactions.createForIssueComment({
              comment_id: ${{ github.event.comment.id }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              content: 'eyes'
            })

  update_typescript_api_augment:
    needs: ["is-org-member"]
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    if: ${{ github.event.comment.body == '/cmd generate-ts-api' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.issue.pull_request.head.ref }}

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          echo "Git configured!" >> $GITHUB_STEP_SUMMARY

      - name: Commit and push changes
        run: |
          echo "test thing" > check12.txt
          git add .
          echo "About to commit changes"
          PR_NUMBER=$(jq --raw-output .issue.number "$GITHUB_EVENT_PATH")
          TARGET_BRANCH=$(gh pr view "$PR_NUMBER" --json headRefName -q .headRefName)
          jq '.' $GITHUB_EVENT_PATH
          
          echo "PR Number: $PR_NUMBER"
          echo "Target Branch: $TARGET_BRANCH"

          git fetch origin "$TARGET_BRANCH"
          git checkout "$TARGET_BRANCH"

          git commit -m "Auto-generated TypeScript interfaces"
          git rebase origin/"$TARGET_BRANCH"
          git push origin "$TARGET_BRANCH"
          
          echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_ENV
          echo "TARGET_BRANCH=$TARGET_BRANCH" >> $GITHUB_ENV
          
          echo "Branch - $TARGET_BRANCH was successfully merged for PR - $PR_NUMBER" >> $GITHUB_STEP_SUMMARY

      - name: Add confused reaction on failure
        uses: actions/github-script@v7
        if: ${{ failure() }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.reactions.createForIssueComment({
              comment_id: ${{ github.event.comment.id }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              content: 'confused'
            })

      - name: Add üëç reaction on success
        uses: actions/github-script@v7
        if: ${{ !failure() }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.reactions.createForIssueComment({
              comment_id: ${{ github.event.comment.id }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              content: '+1'
            })